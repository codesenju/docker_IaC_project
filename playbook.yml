---
- name: Manage Docker Containers
  hosts: localhost
  gather_facts:  false
  vars_files:
    - credentials.yml
    - vars.yml
  tasks:
    
#    - name: Show facts
#      debug:
#        var: ansible_facts

    - name: Create and start services
      docker_compose:
        project_src: '{{ keycloak_compose_file_path }}'
        state: "{{ compose_state }}"
        services: 
          - keycloak
          - grafana-proxy
      notify:
        -   Wait for keycloak server
        -   docker-compose up
#      register: output  
#    - debug:
#        var: output
#      when: not required

    - name: Get info on container
      docker_container_info:
        name: keycloak
      register: keycloak_result

#    - name: Does container exist?
#      debug:
#        msg: "The container {{ 'exists' if keycloak_result.exists else 'does not exist' }}"

#    - name: Print information about container
#      debug:
#        var: keycloak_result.container
#      when: keycloak_result.exists

    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      meta: flush_handlers

    - name: Create or update Keycloak realm | demo
      community.general.keycloak_realm:
        auth_client_id: admin-cli
        auth_keycloak_url: https://localhost:8443
        auth_realm: master
        auth_username: "{{ k_user }}"
        auth_password: "{{ k_password }}"
        id: demo
        realm: demo
        state: present
        enabled: true
        validate_certs: no
      #      register: output
      #    - debug:
      #        var: output
      when: keycloak_result.exists

    - name: Configure keycloak grafana client
      import_tasks: keycloak_grafana.yml
      when: compose_state == "present"
      tags:
        - grafana-client

    - name: Configure keycloak registry client
      import_tasks: keycloak_registry.yml
      when: compose_state == "present"
      tags:
        - registry-client

    - name: Configure Grafana
      import_tasks: grafana.yml
      when: compose_state == "present"
      tags:
        - grafana

    - name: docker prune
      ansible.builtin.shell: |
        echo y | {{ docker }} volume prune
      when: compose_state != "present"
      tags:
        - prune
      
  handlers:
    - name: Wait for keycloak server
      wait_for:
        timeout: 20
      delegate_to: localhost
      when: keycloak_result.exists
    - name: docker-compose up
      docker_compose:
        project_src: '{{ keycloak_compose_file_path }}'
        state: "{{ compose_state }}"
        services: 
          - fluent-bit
          - elasticsearch
          - keycloak
          - grafana1
          - grafana2
          - grafana-proxy